#!/usr/bin/env ruby

require 'optparse'

class CustomRange
  def initialize
    @ranges = []
    @numbers = []
  end

  def <<(element)
    if element.is_a?(Range)
      @ranges << element
    else
      @numbers << element
    end
  end

  def include?(number)
    @ranges.any? { |range| range.include?(number) } || @numbers.include?(number)
  end
end

separator = "\n"
pattern = nil
range = CustomRange.new

option_parser = OptionParser.new do |opts|
  opts.banner = 'Usage: your_program [pattern] [options] [file1 file2 ...]'
  opts.on('-s', '--sep=SEPARATOR', 'Specify line separator') do |s|
    separator = s
  end
  opts.on('-h', '--help', 'Show this help') do
    puts opts
    exit
  end
end

remaining_args = option_parser.order(ARGV)

if remaining_args.empty?
  puts 'Error: No pattern provided.'
else
  pattern = remaining_args.shift
  pattern.split(',').each do |part|
    if part.include?('..')
      eval "range << (#{part})"
    else
      range << part.to_i
    end
  end
  current_line = 0

  ARGF.argv.replace(remaining_args)
  ARGF.each_line(separator) do |line|
    puts line if range.include?(current_line)
    current_line += 1
  end
end
